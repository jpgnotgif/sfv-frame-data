#! /usr/bin/env ruby

require 'logger'
require 'csv'
require 'json'
require 'optparse'

require_relative '../lib/character'
require_relative '../lib/frame_datum'

@schema = {}
@logger = Logger.new($stdout)
@logger.level = Logger::INFO

# start
file = ARGV[0]

unless file
  @logger.error("#{ARGV[0].inspect}: File is null")
  exit(1)
end

unless File.exists?(File.path(file))
  @logger.error("#{file.inspect}: File not found")
  exit(1)
end

character_name = File.basename(file, '.csv')

options = {}
OptionParser.new do |opts|
  opts.on('-sSEASON', '--season=SEASON', 'Set season for data') do |s|
    options[:season] = s
  end
end.parse!

@logger.info("Generating data for #{character_name.inspect}")
season = options[:season] || 1
character = Character.new(character_name);

CSV.foreach(file, headers: {first_row: true}, header_converters: ->(f) { f.strip } ) do |row|
  name = row['Move']
  next unless name

  if character.metadata_row?(name)
    name.gsub!(/\s+/, '_')
    character.send("#{name.downcase.to_sym}=", row['Command'])
  else
    character.frame_data << FrameDatum.new(row)
  end
end

json_path = File.join(Dir.pwd, 'sfv', "s#{season}", 'json', "#{character.name}.json")
@logger.info("Writing frame data to #{json_path}")
File.open(json_path, 'w+') { |f| f.write(character.to_json) }
